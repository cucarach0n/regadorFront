<html lang="en">
  <head>

    <!-- 
      This is the main Handlebars template for the site 
      - When the user visits the homepage or submits a color the app calls the endpoints in server.js
      - The server script passes data in here and the Handlebars code builds it into the HTML page
    -->

    <meta charset="utf-8" />
    <link rel="icon" href="https://glitch.com/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />

    <title>{{seo.title}}</title>

    <!-- Meta tags for SEO and social sharing -->
    <link rel="canonical" href="{{seo.url}}" />
    <meta name="description" content="{{seo.description}}" />
    <meta property="og:title" content="{{seo.title}}" />
    <meta property="og:type" content="article" />
    <meta property="og:url" content="{{seo.url}}" />
    <meta property="og:description" content="{{seo.description}}" />
    <meta property="og:image" content="{{seo.image}}" />
    <meta name="twitter:card" content="summary" />


    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-iYQeCzEYFbKjA/T2uDLTpkwGzCiq6soy8tYaI1GyVh/UjpbCx/TYkiZhlZB6+fzT" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-u1OknCvxWvY5kfmNBILK2hRnQC3Pr17a+RTT6rIHI7NnikvbZlHgTPOOmMi466C8" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.9.1/font/bootstrap-icons.css">
    
    
    <!-- This is a handlebars IF statement
         Checking for a custom "color" parameter from server.js -->
    {{#if color}}
      <!-- If there is a color value, update the style for the page title -->
      <style>
        .title { color:
        {{color}}; }
      </style>
    {{/if}}
    <style>
      .borde {
        padding: 3px 10px;
        border: PowderBlue 5px solid;
        border-radius: 20px;
      }
    </style>
  </head>
  <body>
    <!--<header style="background-image: linear-gradient(to bottom, rgba(211,255,11, 1), rgba(211,255,11, 0.95));" class="fixed-top">-->
    
    {{> navbar}}

    <div class="container text-center" style="margin-top:16rem;">
      <div class="row justify-content-center">
        <div class="col-12">
          <div class="container text-center">
            <div class="row justify-content-center">
              <div class="col-8">
                <h1 class="title">Sistema Riego Automatisado</h1>
                <div class="container text-center" style="margin-top:3rem;">
                  <div class="row justify-content-center gx-5">
                    <div class="col-8 borde" style="margin: 5px" >
                      <h3>
                        Jardin
                      </h3>
                      <img id="imgFoto" class="img-fluid" alt="jardin" src="" style="display: none;"/>
                      <div class="spinner-border text-primary" role="status" id="spiner">
                        <span class="visually-hidden">Loading...</span>
                      </div>
                    </div>
                    
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <script type="text/javascript">
      var myOffcanvas = document.getElementById('offcanvasNavbar')
      myOffcanvas.addEventListener('hidden.bs.offcanvas', function () {
        document.getElementById("offcanvasNavbar").style.display = "none";
      })
      myOffcanvas.addEventListener('show.bs.offcanvas', function () {
        document.getElementById("offcanvasNavbar").style.display = "";
      })
    </script>
    <script type="text/javascript">
      async function obtenerFoto(){
        try {
            const response = await fetch(
              "http://192.168.1.20:8001/getFoto",
              {
              method: "GET",
              headers: { "Content-Type": "application/json" }/*,
              body: JSON.stringify(data)*/
              }
            );
        
            const respuesta = await response.json();
            //console.log(respuesta);
            return respuesta;
        } catch (error) {
            console.log(error);
        }
      }
      async function callFoto(){
        data = await obtenerFoto();
        console.log(data);
        document.getElementById("imgFoto").setAttribute("src","data:image/jpg;base64,"+data.imagen);
        document.getElementById("imgFoto").style.display = "";
        document.getElementById("spiner").style.display = "none";
      }
      callFoto();
      setInterval(callFoto, 1000);
    </script>
  </body>
</html>